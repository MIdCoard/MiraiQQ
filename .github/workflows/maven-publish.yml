name: Publish package to the Maven Central Repository
on:
  release:
    types: [ created ]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v2
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '11'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.OSSRH_USERNAME }} # env variable for username in deploy
          server-password: ${{ secrets.OSSRH_TOKEN }} # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Zip Libs
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r libs.zip libs

      - name: Update Release
        id: update_release
        uses: tubone24/update_release@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset Libs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.update_release.outputs.upload_url }}
          asset_path: libs.zip
          asset_name: libs.zip
          asset_content_type: application/zip

      - name: Upload Release Asset Jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.update_release.outputs.upload_url }}
          asset_path: focess-qq-${{ github.event.release.tag_name }}.jar
          asset_name: focess-qq-${{ github.event.release.tag_name }}.jar
          asset_content_type: application/java-archive

      - name: Publish to Apache Maven Central
        run: mvn deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  run-if-failed:
    needs: [ publish ]
    if: needs.publish.status == 'failure'
    runs-on: ubuntu-latest
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true # default: false
          tag_name: ${{ github.event.release.tag_name }} # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}